name: Run setup through Emacs and see if it gives errors

on:
  push:
  pull_request:
  # run every month just in case (packages may have been updated and cause errors on various variables etc.)
  schedule:
    - cron: '0 10 1 * *'

# Why have a pipeline?
# - To see that quick pushes don't break anything
# - (Older) packages might be deleted from Melpa (happened with Pretty-Lambdada), and then I can fix it before experiencing it on a new machine (which might happen much later when I'm too dependent on that package)
# - See that the changes will work on any machine and don't depend on local circumstances
jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: purcell/setup-emacs@v3.0
        with:
          version: 28.1
      - name: Tangle, byte-compile (replaces old init.el) and run new setup
        run: |
          RUN_DATA=$(HOME=$GITHUB_WORKSPACE/.. emacs --no-window-system --batch --script init.el 2>&1)
          echo "$RUN_DATA"
          WARNINGS=$(echo "$RUN_DATA" | sed '{/Warning/N;s/\n//;}' |  grep Warning | sed -E 's/^(.*\.el)/- \*\*\1\*\*/')
          LOAD_ERRORS=$(echo "$RUN_DATA" | grep -E "(Cannot load)|(Not found)" | sed 's/^/- /')
          echo -e "# Tangle and byte-compile report\n## Errors\n$LOAD_ERRORS\n## Warnings\n$WARNINGS" >> $GITHUB_STEP_SUMMARY
          [ -z $LOAD_ERRORS ] || exit 1


  build-osx:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Emacs
        run: |
          brew install emacs
      - name: Tangle, byte-compile (replaces old init.el) and run new setup
        # TODO: consider if this should be an action! now it it duplicated
        run: |
          RUN_DATA=$(HOME=$GITHUB_WORKSPACE/.. emacs --no-window-system --batch --script init.el 2>&1)
          echo "$RUN_DATA"
          WARNINGS=$(echo "$RUN_DATA" | sed '{/Warning/N;s/\n//;}' |  grep Warning | sed -E 's/^(.*\.el)/- \*\*\1\*\*/')
          LOAD_ERRORS=$(echo "$RUN_DATA" | grep -E "(Cannot load)|(Not found)" | sed 's/^/- /')
          echo -e "# Tangle and byte-compile report\n## Errors\n$LOAD_ERRORS\n## Warnings\n$WARNINGS" >> $GITHUB_STEP_SUMMARY
          [ -z $LOAD_ERRORS ] || exit 1

  # verify that setup loads on Windows. Just in case I ever have to use it...
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Emacs
        run: |
          choco install emacs
      - name: Tangle, byte-compile (replaces old init.el) and run new setup
        run: |
          $env:HOME = $env:GITHUB_WORKSPACE\..
          emacs --eval "(setq user-emacs-directory ${{ env.GITHUB_WORKSPACE }}/..)" --no-window-system --batch --script init.el
